<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>autocad.net 用acedCmd发送命令如何等待用户输入</title>
    <url>/2023/04/23/autocad-net-%E7%94%A8acedCmd%E5%8F%91%E9%80%81%E5%91%BD%E4%BB%A4%E5%A6%82%E4%BD%95%E7%AD%89%E5%BE%85%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用acedCmd发送命令如何等待用户输入</span></span><br><span class="line"><span class="comment">//参考：https://adndevblog.typepad.com/autocad/2012/04/synchronously-send-and-wait-for-commands-in-autocad-using-c-net.html</span></span><br><span class="line"><span class="comment">//qq群：720924083</span></span><br><span class="line"><span class="comment">//2020-11-17</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Windows;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AcadDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SendSyncCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// call the insert command and wait until the user has finished, by Fenton Webb, DevTech</span></span><br><span class="line">    </span><br><span class="line">        [<span class="meta">DllImport(<span class="string">&quot;acad.exe&quot;</span>, CharSet = CharSet.Ansi, CallingConvention = CallingConvention.Cdecl, EntryPoint = <span class="string">&quot;acedCmd&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">acedCmd</span>(<span class="params">System.IntPtr vlist</span>)</span>;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;Test7&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Test7</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            ResultBuffer rb = <span class="keyword">new</span> ResultBuffer();</span><br><span class="line">            <span class="comment">// RTSTR = 5005</span></span><br><span class="line">            rb.Add(<span class="keyword">new</span> TypedValue(<span class="number">5005</span>, <span class="string">&quot;_.INSERT&quot;</span>));</span><br><span class="line">            <span class="comment">// start the insert command</span></span><br><span class="line"></span><br><span class="line">            acedCmd(rb.UnmanagedObject);</span><br><span class="line">            <span class="built_in">bool</span> quit = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// loop round while the insert command is active</span></span><br><span class="line">            <span class="keyword">while</span> (!quit)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="comment">// see what commands are active</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> cmdNames = (<span class="built_in">string</span>)Autodesk.AutoCAD.ApplicationServices.Application.GetSystemVariable(<span class="string">&quot;CMDNAMES&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// if the INSERT command is active</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (cmdNames.ToUpper().IndexOf(<span class="string">&quot;INSERT&quot;</span>) &gt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// then send a PAUSE to the command line</span></span><br><span class="line">                    rb = <span class="keyword">new</span> ResultBuffer();</span><br><span class="line">                    <span class="comment">// RTSTR = 5005 - send a user pause to the command line</span></span><br><span class="line"></span><br><span class="line">                    rb.Add(<span class="keyword">new</span> TypedValue(<span class="number">5005</span>, <span class="string">&quot;\\&quot;</span>));</span><br><span class="line"></span><br><span class="line">                    acedCmd(rb.UnmanagedObject);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="comment">// otherwise quit</span></span><br><span class="line">                    quit = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>autocad.net 设置指定图层为当前图层</title>
    <url>/2020/11/08/autocad-net-%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%AE%9A%E5%9B%BE%E5%B1%82%E4%B8%BA%E5%BD%93%E5%89%8D%E5%9B%BE%E5%B1%82/</url>
    <content><![CDATA[<p>方法1：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLayerCurrent</span>()</span></span><br><span class="line">        &#123;<span class="comment">//http://docs.autodesk.com/ACD/2010/ENU/AutoCAD%20.NET%20Developer%27s%20Guide/index.html?url=WS1a9193826455f5ff2566ffd511ff6f8c7ca-3d31.htm,topicNumber=d0e29116</span></span><br><span class="line">          <span class="comment">// Get the current document and database</span></span><br><span class="line">          Document acDoc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line">          Database acCurDb = acDoc.Database;</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Start a transaction</span></span><br><span class="line">          <span class="keyword">using</span> (Transaction acTrans = acCurDb.TransactionManager.StartTransaction())</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="comment">// Open the Layer table for read</span></span><br><span class="line">              LayerTable acLyrTbl;</span><br><span class="line">              acLyrTbl = acTrans.GetObject(acCurDb.LayerTableId,OpenMode.ForRead) <span class="keyword">as</span> LayerTable;</span><br><span class="line"> </span><br><span class="line">              <span class="built_in">string</span> sLayerName = <span class="string">&quot;Center&quot;</span>;</span><br><span class="line"> </span><br><span class="line">              <span class="keyword">if</span> (acLyrTbl.Has(sLayerName) == <span class="literal">true</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="comment">// Set the layer Center current</span></span><br><span class="line">                  acCurDb.Clayer = acLyrTbl[sLayerName]; </span><br><span class="line">                  <span class="comment">// Save the changes</span></span><br><span class="line">                  acTrans.Commit();</span><br><span class="line">              &#125; </span><br><span class="line">              <span class="comment">// Dispose of the transaction</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>方法2：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLayerCurrent2</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Application.SetSystemVariable(<span class="string">&quot;CLAYER&quot;</span>, <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>完整代码：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-07</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AcadDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyLayer</span></span><br><span class="line">    &#123; </span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;SetLayerCurrent&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLayerCurrent</span>()</span></span><br><span class="line">        &#123;<span class="comment">//http://docs.autodesk.com/ACD/2010/ENU/AutoCAD%20.NET%20Developer%27s%20Guide/index.html?url=WS1a9193826455f5ff2566ffd511ff6f8c7ca-3d31.htm,topicNumber=d0e29116</span></span><br><span class="line">          <span class="comment">// Get the current document and database</span></span><br><span class="line">          Document acDoc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line">          Database acCurDb = acDoc.Database;</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// Start a transaction</span></span><br><span class="line">          <span class="keyword">using</span> (Transaction acTrans = acCurDb.TransactionManager.StartTransaction())</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="comment">// Open the Layer table for read</span></span><br><span class="line">              LayerTable acLyrTbl;</span><br><span class="line">              acLyrTbl = acTrans.GetObject(acCurDb.LayerTableId,OpenMode.ForRead) <span class="keyword">as</span> LayerTable;</span><br><span class="line"> </span><br><span class="line">              <span class="built_in">string</span> sLayerName = <span class="string">&quot;Center&quot;</span>;</span><br><span class="line"> </span><br><span class="line">              <span class="keyword">if</span> (acLyrTbl.Has(sLayerName) == <span class="literal">true</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="comment">// Set the layer Center current</span></span><br><span class="line">                  acCurDb.Clayer = acLyrTbl[sLayerName]; </span><br><span class="line">                  <span class="comment">// Save the changes</span></span><br><span class="line">                  acTrans.Commit();</span><br><span class="line">              &#125; </span><br><span class="line">              <span class="comment">// Dispose of the transaction</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLayerCurrent2</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Application.SetSystemVariable(<span class="string">&quot;CLAYER&quot;</span>, <span class="string">&quot;Center&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>autocad.net使用Ribbon runtime API在实体选择时显示上下文选项卡</title>
    <url>/2023/04/22/autocad-net%E4%BD%BF%E7%94%A8Ribbon%20runtime%20API%E5%9C%A8%E5%AE%9E%E4%BD%93%E9%80%89%E6%8B%A9%E6%97%B6%E6%98%BE%E7%A4%BA%E4%B8%8A%E4%B8%8B%E6%96%87%E9%80%89%E9%A1%B9%E5%8D%A1/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-10</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Windows;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Geometry;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AcadDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RibbonDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//参考 https://adndevblog.typepad.com/autocad/2012/04/displaying-a-contextual-tab-upon-entity-selection-using-ribbon-runtime-api.html</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span>//</span></span><br><span class="line">        <span class="comment">// Use: Displays a contextual tab upon entity selection,</span></span><br><span class="line">        <span class="comment">//      using Ribbon runtime API.</span></span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="comment">// Author: Philippe Leefsma, April 2012</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span><span class="doctag">///</span>//</span></span><br><span class="line">        Autodesk.Windows.RibbonTab _ctxTab = <span class="literal">null</span>;</span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;CtxTabUponSelect&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CtxTabUponSelect</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document doc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line">            <span class="comment">//Set up event for selection changed</span></span><br><span class="line"></span><br><span class="line">            doc.ImpliedSelectionChanged +=<span class="keyword">new</span> EventHandler(doc_ImpliedSelectionChanged);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">doc_ImpliedSelectionChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document doc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line"></span><br><span class="line">            PromptSelectionResult psr = doc.Editor.SelectImplied();</span><br><span class="line">            <span class="comment">//if no entities are selected, we hide our context tab</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (psr.Value == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                HideTab();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//In this example we only display the tab if only circles are</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// selected. You may want to change this condition of course.</span></span><br><span class="line">            <span class="keyword">foreach</span> (SelectedObject selObj <span class="keyword">in</span> psr.Value)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (selObj.ObjectId.ObjectClass.DxfName.ToLower()!= <span class="string">&quot;circle&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    HideTab();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//We will use the Application.Idle event to safely display our tab</span></span><br><span class="line">            <span class="keyword">if</span> (_ctxTab == <span class="literal">null</span> || !_ctxTab.IsVisible)</span><br><span class="line">            &#123;</span><br><span class="line">                Autodesk.AutoCAD.ApplicationServices.Application.Idle +=<span class="keyword">new</span> EventHandler(OnIdle);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">OnIdle</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//Make sure ribbon manager is available</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Autodesk.Windows.ComponentManager.Ribbon != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Create tab if it doesn&#x27;t exist</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (_ctxTab == <span class="literal">null</span>)</span><br><span class="line">                    CreateCtxTab();</span><br><span class="line"></span><br><span class="line">                <span class="comment">//Otherwise make it visible</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!_ctxTab.IsVisible)</span><br><span class="line">                &#123;</span><br><span class="line">                    Autodesk.Windows.RibbonControl ribbonCtrl =Autodesk.Windows.ComponentManager.Ribbon;</span><br><span class="line"></span><br><span class="line">                    ribbonCtrl.ShowContextualTab(_ctxTab, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                    _ctxTab.IsActive = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!_ctxTab.IsActive)</span><br><span class="line">                    _ctxTab.IsActive = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Tab creation method</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">CreateCtxTab</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Autodesk.Windows.RibbonControl ribbonCtrl =Autodesk.Windows.ComponentManager.Ribbon;</span><br><span class="line"></span><br><span class="line">            _ctxTab = <span class="keyword">new</span> Autodesk.Windows.RibbonTab();</span><br><span class="line"></span><br><span class="line">            _ctxTab.Name = <span class="string">&quot;MyTab&quot;</span>;</span><br><span class="line"></span><br><span class="line">            _ctxTab.Id = <span class="string">&quot;MY_CTX_TAB_ID&quot;</span>;</span><br><span class="line"></span><br><span class="line">            _ctxTab.IsVisible = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            _ctxTab.Title = _ctxTab.Name;</span><br><span class="line"></span><br><span class="line">            _ctxTab.IsContextualTab = <span class="literal">true</span>;</span><br><span class="line">            ribbonCtrl.Tabs.Add(_ctxTab);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">HideTab</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Autodesk.AutoCAD.ApplicationServices.Application.Idle-= <span class="keyword">new</span> EventHandler(OnIdle);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (_ctxTab != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Autodesk.Windows.RibbonControl ribbonCtrl=Autodesk.Windows.ComponentManager.Ribbon;</span><br><span class="line"></span><br><span class="line">                ribbonCtrl.HideContextualTab(_ctxTab);</span><br><span class="line"></span><br><span class="line">                _ctxTab.IsVisible = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                _ctxTab = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>autocad.net修改SCREENSIZE的值</title>
    <url>/2023/04/22/autocad-net%E4%BF%AE%E6%94%B9SCREENSIZE%E7%9A%84%E5%80%BC/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-07</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Windows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">adndevblog</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScreenDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//参考自https://adndevblog.typepad.com/autocad/2012/03/control-the-autocad-screensize-environment-variable-in-autocad-using-net.html</span></span><br><span class="line">        <span class="comment">//系统变量SCREENSIZE是只读的，此方法可用于修改SCREENSIZE的值</span></span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;ChangeScreenSize&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">changeScreenSize</span>()</span>&#123;</span><br><span class="line"></span><br><span class="line">            Document doc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line"></span><br><span class="line">            Autodesk.AutoCAD.Windows.Window docWindow = doc.Window;</span><br><span class="line"></span><br><span class="line">            System.Drawing.Size size = docWindow.GetSize();</span><br><span class="line"></span><br><span class="line">            Editor ed = doc.Editor;</span><br><span class="line"></span><br><span class="line">            ed.WriteMessage(<span class="string">&quot;\nDocument Size:\n&quot;</span> +size.ToString() + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            docWindow.WindowState = Window.State.Normal;</span><br><span class="line"></span><br><span class="line">            docWindow.SetSize(<span class="keyword">new</span> System.Drawing.Size(<span class="number">500</span>, <span class="number">500</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>autocad.net将Geometry对象转换为Database对象</title>
    <url>/2023/04/22/autocad-net%E5%B0%86Geometry%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BADatabase%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-10</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Windows;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Geometry;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AcadDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">OtherDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> https://adndevblog.typepad.com/autocad/2012/04/converting-geometry-objects-to-database-entity.html</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;ge2dbnet&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Ge2DbMethod</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">             EllipticalArc3d arc1 =<span class="keyword">new</span> EllipticalArc3d(Point3d.Origin,Vector3d.XAxis,Vector3d.YAxis,<span class="number">2.0</span>, <span class="number">0.5</span>); </span><br><span class="line"></span><br><span class="line">            GetCurveObjectId(arc1);</span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> ObjectId <span class="title">GetCurveObjectId</span>(<span class="params">Curve3d geCurve3d</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document doc  = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line">            Editor ed = doc.Editor;</span><br><span class="line">            Database db = doc.Database;</span><br><span class="line"></span><br><span class="line">            ObjectId oid = ObjectId.Null;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Curve dbCurve = Curve.CreateFromGeCurve(geCurve3d);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dbCurve != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">using</span> (Transaction tr =db.TransactionManager.StartTransaction())</span><br><span class="line">                    &#123;</span><br><span class="line">                        BlockTable bt = tr.GetObject(db.BlockTableId,OpenMode.ForRead) <span class="keyword">as</span> BlockTable;</span><br><span class="line"></span><br><span class="line">                        BlockTableRecord btr =tr.GetObject(db.CurrentSpaceId,OpenMode.ForWrite) <span class="keyword">as</span> BlockTableRecord;</span><br><span class="line">                        btr.AppendEntity(dbCurve);</span><br><span class="line">                        tr.AddNewlyCreatedDBObject(dbCurve, <span class="literal">true</span>);</span><br><span class="line">                        tr.Commit();</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">catch</span> (System.Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                ed.WriteMessage(ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> oid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>autocad.net创建尺寸样式并置为当前</title>
    <url>/2023/04/22/autocad-net%E5%88%9B%E5%BB%BA%E5%B0%BA%E5%AF%B8%E6%A0%B7%E5%BC%8F%E5%B9%B6%E7%BD%AE%E4%B8%BA%E5%BD%93%E5%89%8D/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-09</span></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 创建尺寸样式并置为当前</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 参考 https://adndevblog.typepad.com/autocad/2012/04/creating-a-new-dimension-style-and-make-it-as-current.html</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;NewDimStyle&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">NewDimStyle</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Database db =Application.DocumentManager.MdiActiveDocument.Database;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (Transaction trans =db.TransactionManager.StartTransaction())</span><br><span class="line">            &#123;</span><br><span class="line">                DimStyleTable DimTabb =(DimStyleTable)trans.GetObject(db.DimStyleTableId,OpenMode.ForRead);</span><br><span class="line"></span><br><span class="line">                ObjectId dimId = ObjectId.Null;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!DimTabb.Has(<span class="string">&quot;Test&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    DimTabb.UpgradeOpen();</span><br><span class="line"></span><br><span class="line">                    DimStyleTableRecord newRecord =<span class="keyword">new</span> DimStyleTableRecord();</span><br><span class="line"></span><br><span class="line">                    newRecord.Name = <span class="string">&quot;Test&quot;</span>;</span><br><span class="line"></span><br><span class="line">                    dimId = DimTabb.Add(newRecord);</span><br><span class="line"></span><br><span class="line">                    trans.AddNewlyCreatedDBObject(newRecord, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    dimId = DimTabb[<span class="string">&quot;Test&quot;</span>];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                DimStyleTableRecord DimTabbRecaord =(DimStyleTableRecord)trans.GetObject(dimId,OpenMode.ForRead);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (DimTabbRecaord.ObjectId != db.Dimstyle)</span><br><span class="line">                &#123;</span><br><span class="line">                    db.Dimstyle = DimTabbRecaord.ObjectId;</span><br><span class="line">                    db.SetDimstyleData(DimTabbRecaord);</span><br><span class="line">                &#125;</span><br><span class="line">                trans.Commit();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>autocad.net计算图案填充的周长</title>
    <url>/2023/04/22/autocad-net%E8%AE%A1%E7%AE%97%E5%9B%BE%E6%A1%88%E5%A1%AB%E5%85%85%E7%9A%84%E5%91%A8%E9%95%BF/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//参考：https://adndevblog.typepad.com/autocad/2012/04/perimeter-of-a-hatch-using-objectarx-and-autocad-net-api.html</span></span><br><span class="line"><span class="comment">//计算图案填充的周长</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-14</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Windows;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Geometry;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AcadDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PerimeterOfHatch</span></span><br><span class="line">    &#123;      </span><br><span class="line">        <span class="comment">// Perimeter calculation of a hatch using AutoCAD.Net API</span></span><br><span class="line"></span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;HatchPerimeterTest&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HatchPerimeterTest</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document activeDoc= Application.DocumentManager.MdiActiveDocument;</span><br><span class="line"></span><br><span class="line">            Editor ed = activeDoc.Editor;</span><br><span class="line">            PromptEntityOptions peo= <span class="keyword">new</span> PromptEntityOptions(<span class="string">&quot;Select a hatch : &quot;</span>);</span><br><span class="line">            peo.SetRejectMessage(<span class="string">&quot;\nPlease select a hatch&quot;</span>);</span><br><span class="line"></span><br><span class="line">            peo.AddAllowedClass(<span class="keyword">typeof</span>(Hatch), <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            PromptEntityResult per = ed.GetEntity(peo);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (per.Status != PromptStatus.OK)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            HatchPerimeter(per.ObjectId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">HatchPerimeter</span>(<span class="params">ObjectId entId</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document activeDoc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line"></span><br><span class="line">            Database db = activeDoc.Database;</span><br><span class="line"></span><br><span class="line">            Editor ed = activeDoc.Editor;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (Transaction tr = db.TransactionManager.StartTransaction())</span><br><span class="line">            &#123;</span><br><span class="line">                Hatch hatch = tr.GetObject(entId, OpenMode.ForRead) <span class="keyword">as</span> Hatch;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">int</span> nLoops = hatch.NumberOfLoops;</span><br><span class="line">                <span class="built_in">double</span> totalExternalPerimeter = <span class="number">0.0</span>;</span><br><span class="line">                <span class="built_in">double</span> totalInternalPerimeter = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; nLoops; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">double</span> loopLength = <span class="number">0.0</span>;</span><br><span class="line"></span><br><span class="line">                    HatchLoopTypes hlt = hatch.LoopTypeAt(i);</span><br><span class="line"></span><br><span class="line">                    HatchLoop hatchLoop = hatch.GetLoopAt(i);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> ((hatch.LoopTypeAt(i) &amp; HatchLoopTypes.Polyline)== HatchLoopTypes.Polyline)</span><br><span class="line">                    &#123;</span><br><span class="line">                        BulgeVertexCollection bulges= hatchLoop.Polyline;</span><br><span class="line">                        <span class="built_in">int</span> nVertices = bulges.Count;</span><br><span class="line"></span><br><span class="line">                        Polyline testPoly = <span class="keyword">new</span> Polyline(nVertices);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="built_in">int</span> vx = <span class="number">0</span>; vx &lt; bulges.Count; vx++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            BulgeVertex bv = bulges[vx];</span><br><span class="line"></span><br><span class="line">                            testPoly.AddVertexAt(vx,bv.Vertex,bv.Bulge,<span class="number">1.0</span>,<span class="number">1.0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        LineSegment3d ls = <span class="keyword">new</span> LineSegment3d();</span><br><span class="line"></span><br><span class="line">                        CircularArc3d cs = <span class="keyword">new</span> CircularArc3d();</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">double</span> d = <span class="number">0.0</span>, p1 = <span class="number">0.0</span>, p2 = <span class="number">1.0</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span> (<span class="built_in">int</span> ver = <span class="number">0</span>; ver &lt; nVertices - <span class="number">1</span>; ver++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            d = testPoly.GetBulgeAt(ver);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span> (d &lt;= <span class="number">1e-5</span>)</span><br><span class="line">                            &#123;</span><br><span class="line">                                ls = testPoly.GetLineSegmentAt(ver);</span><br><span class="line"></span><br><span class="line">                                loopLength += ls.Length;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                Point2d v1= <span class="keyword">new</span> Point2d(bulges[ver].Vertex.X,bulges[ver].Vertex.Y);</span><br><span class="line"></span><br><span class="line">                                Point2d v2= <span class="keyword">new</span> Point2d(bulges[ver + <span class="number">1</span>].Vertex.X,bulges[ver + <span class="number">1</span>].Vertex.Y);</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (v1.IsEqualTo(v2) == <span class="literal">false</span>)</span><br><span class="line">                                &#123;</span><br><span class="line"></span><br><span class="line">                                    cs = testPoly.GetArcSegmentAt(ver);</span><br><span class="line"></span><br><span class="line">                                    p1 = cs.GetParameterOf(cs.StartPoint);</span><br><span class="line"></span><br><span class="line">                                    p2 = cs.GetParameterOf(cs.EndPoint);</span><br><span class="line"></span><br><span class="line">                                    loopLength +=cs.GetLength</span><br><span class="line">                                        (p1,p2,Tolerance.Global.EqualPoint);</span><br><span class="line"></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        Curve2dCollection curves = hatchLoop.Curves;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (curves != <span class="literal">null</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">foreach</span> (Curve2d curve <span class="keyword">in</span> curves)</span><br><span class="line">                            &#123;</span><br><span class="line">                                <span class="keyword">if</span> (hatchLoop.LoopType== HatchLoopTypes.External)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    totalExternalPerimeter +=curve.GetLength(<span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                    totalInternalPerimeter +=curve.GetLength(<span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (nLoops &gt; <span class="number">1</span> &amp;&amp;</span><br><span class="line"></span><br><span class="line">                            ((hlt &amp; HatchLoopTypes.External) != HatchLoopTypes.External))</span><br><span class="line">                    &#123;</span><br><span class="line">                        totalInternalPerimeter += loopLength;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        totalExternalPerimeter += loopLength;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                ed.WriteMessage(<span class="built_in">string</span>.Format(<span class="string">&quot;\nExternal Perimeter : &#123;0&#125;&quot;</span>,totalExternalPerimeter));</span><br><span class="line"></span><br><span class="line">                ed.WriteMessage(<span class="built_in">string</span>.Format(<span class="string">&quot;\nInternal Perimeter : &#123;0&#125;&quot;</span>,totalInternalPerimeter));</span><br><span class="line"></span><br><span class="line">                tr.Commit();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<p><video src="HatchPerimeterTest.mp4" position= "absolute" width="100%" height="100%" controls="controls"></video></p>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/04/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
  </entry>
  <entry>
    <title>不要依赖autocad.net事件的触发顺序安排程序逻辑，事件触发顺序还可能和分辨率有关</title>
    <url>/2019/04/25/%E4%B8%8D%E8%A6%81%E4%BE%9D%E8%B5%96autocad-net%E4%BA%8B%E4%BB%B6%E7%9A%84%E8%A7%A6%E5%8F%91%E9%A1%BA%E5%BA%8F%E5%AE%89%E6%8E%92%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%EF%BC%8C%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E9%A1%BA%E5%BA%8F%E8%BF%98%E5%8F%AF%E8%83%BD%E5%92%8C%E5%88%86%E8%BE%A8%E7%8E%87%E6%9C%89%E5%85%B3/</url>
    <content><![CDATA[<p>不要依赖autocad.net事件的触发顺序安排程序逻辑，比如document的事件触发顺序是不定的，而且可能和屏幕分辨率有关。<br>实测发现，在高分辨率下，打开一张图 会首先触发DocumentToBeDeactivated，再触发DocumentCreated；但是在800x600分辨率下，会先触发DocumentCreated再触发DocumentToBeDeactivated。</p>
]]></content>
  </entry>
  <entry>
    <title>autocad.net（c#）获取autocad模型空间窗口大小</title>
    <url>/2023/04/22/autocad-net%EF%BC%88c-%EF%BC%89%E8%8E%B7%E5%8F%96autocad%E6%A8%A1%E5%9E%8B%E7%A9%BA%E9%97%B4%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-09</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取autocad模型空间窗口大小</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 参考 https://adndevblog.typepad.com/autocad/2012/04/getting-the-extents-of-autocad-model-window.html</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;ScreenExtents&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ScreenExtents</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document doc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line"></span><br><span class="line">            Database db = doc.Database;</span><br><span class="line"></span><br><span class="line">            Editor ed = doc.Editor;</span><br><span class="line">            Point2d screenSize = (Point2d)Application.GetSystemVariable(<span class="string">&quot;SCREENSIZE&quot;</span>);</span><br><span class="line">            System.Drawing.Point upperLeft = <span class="keyword">new</span> System.Drawing.Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            System.Drawing.Point lowerRight = <span class="keyword">new</span> System.Drawing.Point((<span class="built_in">int</span>)screenSize.X,(<span class="built_in">int</span>)screenSize.Y);</span><br><span class="line">            Point3d upperLeftWorld = ed.PointToWorld(upperLeft, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            Point3d lowerRightWorld = ed.PointToWorld(lowerRight, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">using</span> (Transaction Tx = db.TransactionManager.StartTransaction())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Draws a line to visualize result...</span></span><br><span class="line"></span><br><span class="line">                Line line = <span class="keyword">new</span> Line(upperLeftWorld, lowerRightWorld);</span><br><span class="line"></span><br><span class="line">                BlockTableRecord btr = Tx.GetObject(db.CurrentSpaceId, OpenMode.ForWrite) <span class="keyword">as</span> BlockTableRecord;</span><br><span class="line">                btr.AppendEntity(line);</span><br><span class="line"></span><br><span class="line">                Tx.AddNewlyCreatedDBObject(line, <span class="literal">true</span>);</span><br><span class="line">                Tx.Commit();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>在autocad.NET中使用Point3AngularDimension创建3点角度标注</title>
    <url>/2023/04/22/%E5%9C%A8autocad-NET%E4%B8%AD%E4%BD%BF%E7%94%A8Point3AngularDimension%E5%88%9B%E5%BB%BA3%E7%82%B9%E8%A7%92%E5%BA%A6%E6%A0%87%E6%B3%A8/</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//by 鸟哥 qq1833183060</span></span><br><span class="line"><span class="comment">//qq群 720924083</span></span><br><span class="line"><span class="comment">//2020-11-09</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.DatabaseServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Runtime;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.EditorInput;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.ApplicationServices;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Windows;</span><br><span class="line"><span class="keyword">using</span> Autodesk.AutoCAD.Geometry;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AcadDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DimensionDemo</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//https://adndevblog.typepad.com/autocad/2012/04/creating-a-3-point-angular-dimension-using-point3angulardimension-in-net.html</span></span><br><span class="line">        [<span class="meta">CommandMethod(<span class="string">&quot;netDimAngular&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">netDimAngular</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Document doc = Application.DocumentManager.MdiActiveDocument;</span><br><span class="line">            Database db = doc.Database;</span><br><span class="line">            Editor ed = doc.Editor;</span><br><span class="line"></span><br><span class="line">            PromptEntityOptions peo = <span class="keyword">new</span> PromptEntityOptions(<span class="string">&quot;\nSelect an Arc: &quot;</span>);</span><br><span class="line"></span><br><span class="line">            peo.SetRejectMessage(<span class="string">&quot;\nMust be an Arc...&quot;</span>);</span><br><span class="line"></span><br><span class="line">            peo.AddAllowedClass(<span class="keyword">typeof</span>(Arc), <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">            PromptEntityResult per = ed.GetEntity(peo);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (per.Status != PromptStatus.OK)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (Transaction Tx =db.TransactionManager.StartTransaction())</span><br><span class="line">            &#123;</span><br><span class="line">                Arc arc = Tx.GetObject(per.ObjectId, OpenMode.ForRead) <span class="keyword">as</span> Arc;</span><br><span class="line"></span><br><span class="line">                BlockTable bt = Tx.GetObject(db.BlockTableId,OpenMode.ForRead) <span class="keyword">as</span> BlockTable;</span><br><span class="line"></span><br><span class="line">                BlockTableRecord btr = Tx.GetObject(bt[BlockTableRecord.ModelSpace],OpenMode.ForWrite) <span class="keyword">as</span> BlockTableRecord;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">string</span> dimStyle = <span class="string">&quot;Standard&quot;</span>;</span><br><span class="line"></span><br><span class="line">                DimStyleTable dimStyleTable = Tx.GetObject(db.DimStyleTableId,OpenMode.ForRead) <span class="keyword">as</span> DimStyleTable;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (dimStyleTable.Has(dimStyle))</span><br><span class="line">                &#123;</span><br><span class="line">                    Point3d point3 =arc.StartPoint.Add(arc.EndPoint.GetAsVector()).MultiplyBy(<span class="number">0.5</span>);</span><br><span class="line"></span><br><span class="line">                    ObjectId dimStyleId = dimStyleTable[dimStyle];</span><br><span class="line"></span><br><span class="line">                    Point3AngularDimension dim = <span class="keyword">new</span> Point3AngularDimension(arc.Center,arc.StartPoint,arc.EndPoint,point3, <span class="string">&quot;&quot;</span>,dimStyleId);</span><br><span class="line"></span><br><span class="line">                    btr.AppendEntity(dim);</span><br><span class="line"></span><br><span class="line">                    Tx.AddNewlyCreatedDBObject(dim, <span class="literal">true</span>);</span><br><span class="line">                    Tx.Commit();</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>autocad.net</tag>
      </tags>
  </entry>
  <entry>
    <title>数学</title>
    <url>/2023/05/02/%E6%95%B0%E5%AD%A6%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p>ddd</p>
]]></content>
      <categories>
        <category>resource</category>
      </categories>
  </entry>
  <entry>
    <title>aa</title>
    <url>/2023/04/20/blog/test/</url>
    <content><![CDATA[<p>fwfw</p>
<h1 id="dwD"><a href="#dwD" class="headerlink" title="dwD"></a>dwD</h1>]]></content>
  </entry>
</search>
